#!/bin/bash
ip3a=$1
ip3b=$2
if [[ -z $ip3a || -z $ip3b ]];then
	echo "输入参数: client-参数.254"
	echo "例 增加106网段: bash server.sh 106 107"
	echo "脚本执行会自动生成两个网段的配置！"
	exit 0
fi

cp /etc/apt/sources.list /etc/apt/sources.list.bak

cat>/etc/apt/sources.list<<EOF
deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse

deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse

deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse

deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse

deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse

EOF

apt update
if [ $? -eq 0 ];then
   apt install openvpn net-tools nload easy-rsa sshpass -y
   else
   echo "update error~~"
   exit 0
fi

localIP_a=`ifconfig|grep inet|grep broadcast|awk '{print $2}'`
localIP_b=`ifconfig|grep inet|grep broadcast|awk '{print $2}'|awk -F. '{print $1 "." $2}'`
cat>/etc/fier.ini<<EOF
# Generated by iptables-save v1.6.1 on Fri Jun 28 16:49:17 2019
*filter
:INPUT ACCEPT [3451895399:1832408864291]
:FORWARD ACCEPT [13077511:5413122642]
:OUTPUT ACCEPT [2450954755:1641007388919]
COMMIT
# Completed on Fri Jun 28 16:49:17 2019
# Generated by iptables-save v1.6.1 on Fri Jun 28 16:49:17 2019
*nat
:PREROUTING ACCEPT [902349:50516898]
:INPUT ACCEPT [613168:31022726]
:OUTPUT ACCEPT [231586:16741024]
:POSTROUTING ACCEPT [244699:19901282]
-A POSTROUTING -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j SNAT --to-source $localIP_a
-A POSTROUTING -s 10.8.0.0/24 -j MASQUERADE
-A POSTROUTING -s $localIP_b.0.0/24 -j MASQUERADE
-A POSTROUTING -s $localIP_b.0.0/24 -j MASQUERADE
COMMIT
EOF

iptables-restore < /etc/fier.ini

cat>/etc/rc.local<<EOF
#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.
echo "看到这行字，说明添加自启动脚本成功。" > /usr/local/test.log
iptables-restore < /etc/fier.ini
exit 0
EOF

cat>>/etc/sysctl.conf<<EOF
net.ipv4.ip_forward = 1
net.core.default_qdisc=fq
net.ipv4.tcp_congestion_control=bbr
EOF

sysctl -p
rm -rf /etc/openvpn/*
mkdir -p /etc/openvpn/ccd /root/ovtool
#sshpass -p "lVa1gdY#y%\$C^7y8" scp -o StrictHostKeyChecking=no -r root@47.52.117.171:/etc/openvpn/* /etc/openvpn
#sshpass -p "lVa1gdY#y%\$C^7y8" scp -o StrictHostKeyChecking=no -r root@47.52.117.171:/root/ovtool/* /root/ovtool
#sshpass -p "rFJK1y6ItzayZb93" scp -o StrictHostKeyChecking=no -r root@47.90.90.231:/etc/openvpn/* /etc/openvpn
#sshpass -p "rFJK1y6ItzayZb93" scp -o StrictHostKeyChecking=no -r root@47.90.90.231:/root/ovtool/* /root/ovtool
sshpass -p "jGHbwoUwITG2xvSg" scp -o StrictHostKeyChecking=no -r root@47.244.165.110:/etc/openvpn/* /etc/openvpn
sshpass -p "jGHbwoUwITG2xvSg" scp -o StrictHostKeyChecking=no -r root@47.244.165.110:/root/ovtool/* /root/ovtool
echo "client-6,10.8.0.2">/etc/openvpn/ipp.txt

cat>/etc/openvpn/server.conf<<EOF
port 11942
proto udp 
dev tun
sndbuf 332400
rcvbuf 332400
#topology subnet
ca ca.crt
cert server.crt
key server.key
dh dh.pem
auth SHA512
tls-auth ta.key 0
topology subnet
server 10.8.0.0 255.255.255.0
ifconfig-pool-persist ipp.txt
push "redirect-gateway def1 bypass-dhcp"
push "dhcp-option DNS 8.8.4.4"
push "dhcp-option DNS 8.8.8.8"
#fragment 1400 ##### very important you can turn it up a bit. but,the lower the safer
#mssfix 1400 ##### very important
client-config-dir ccd
client-to-client

route 10.10.10.0 255.255.255.0
push "route 10.10.10.0 255.255.255.0" 
route 192.168.10.0 255.255.255.0
push "route 192.168.10.0 255.255.255.0" 
route 192.168.11.0 255.255.255.0
push "route 192.168.11.0 255.255.255.0" 
route 192.168.$ip3a.0 255.255.255.0
push "route 192.168.$ip3a.0 255.255.255.0" 
route 192.168.$ip3b.0 255.255.255.0
push "route 192.168.$ip3b.0 255.255.255.0"

keepalive 10 120
cipher AES-256-CBC
user nobody
group nogroup
persist-key
persist-tun
status openvpn-status.log
log /var/log/openvpn/openvpn.log
log-append /var/log/openvpn/openvpn.log
verb 3
crl-verify crl.pem
EOF

cd /root/ovtool && echo -e "1\nclient-$ip3a.254" | bash ./openvpn-install.sh
echo "iroute 192.168.$ip3a.0 255.255.255.0">/etc/openvpn/ccd/client-$ip3a.254
I_var_a=$(echo "remote oov$ip3a.tanlangov.com 11942")
sed -i 6d /root/client-$ip3a.254.ovpn
sed -i "6 s/^/$I_var_a\n/" /root/client-$ip3a.254.ovpn

cd /root/ovtool && echo -e "1\nclient-$ip3b.254" | bash ./openvpn-install.sh
echo "iroute 192.168.$ip3b.0 255.255.255.0">/etc/openvpn/ccd/client-$ip3b.254
I_var_b=$(echo "remote oov$ip3b.tanlangov.com 11942")
sed -i 6d /root/client-$ip3b.254.ovpn
sed -i "6 s/^/$I_var_b\n/" /root/client-$ip3b.254.ovpn

systemctl enable openvpn
systemctl start openvpn

#/usr/sbin/openvpn --cd /etc/openvpn --config /etc/openvpn/server.conf --daemon
#/usr/sbin/openvpn --daemon ovpn-server --status /run/openvpn/server.status 10 --cd /etc/openvpn --script-security 2 --config /etc/openvpn/server.conf --writepid /run/openvpn/server.pid



